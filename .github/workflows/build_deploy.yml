name: 'Create/Destroy Resources'

on:
  workflow_dispatch:
    inputs:
      action:
          type: choice
          description: Terraform apply or create
          options: 
          - apply
          - destroy
          required: true
          
jobs:
  build-and-deploy:
    name: 'Build and Deployment of AWS Resources'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
        
    - name: Build and push Docker image
      run: |
        docker build -t go-sqs-api .
        aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 955017809248.dkr.ecr.ap-southeast-1.amazonaws.com
        docker tag go-sqs-api:latest 955017809248.dkr.ecr.ap-southeast-1.amazonaws.com/go-sqs-api
        docker push 955017809248.dkr.ecr.ap-southeast-1.amazonaws.com/go-sqs-api:latest
      
    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      
    - name: Terraform Init
      run: cd Terraform;terraform init

    - name: Terraform Plan
      run: cd Terraform;terraform plan -input=false

    # Applying changes to Infrastructure (for each environment)
    - name: Terraform Apply/Destroy
      run: cd Terraform;terraform ${{ github.event.inputs.action }} -auto-approve -input=false
